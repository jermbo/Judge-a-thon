//Run all this to setup the database and collections needed.
// NOTE NOTE NOTE
// NOTE judges.html needs the hackathon.insertedId.str\
// NOTE NOTE NOTE

// Main database name. Connect to it
use judgeathon;

// Hackathon info
hackathon = db.Hackathons.insertOne({Name:'Palm Beach Tech Oct Office Depot Hackathon'});


// Judges - HackathonId, Name, login, password?
db.Judges.insertOne({HackathonId:hackathon.insertedId.str,Name: 'Rick',Description: 'IBM Guy',Username:'rick',Password:'rick123'});
db.Judges.insertOne({HackathonId:hackathon.insertedId.str,Name: 'Damian',Description: 'BocaJS Guy',Username:'damian',Password:'damian123'});

// Questions - HackathonId,Question Title, Question Description,Score range, possible array of answers (with order already from best to worse)
db.Questions.insert({HackathonId:hackathon.insertedId.str,Title:'Impact',Description:`The Team is clear about the problem being solved.<BR/>The solution can affect a large number of people.<BR/>The solution will make a big improvement in people's lives.`,RangeStart:1,RangeEnd:5,AnswersArray:[]});
db.Questions.insert({HackathonId:hackathon.insertedId.str,Title:'Functionality',Description:`The solution directly addresses the problem the team wishes to solve.<BR/> The solution is intuitive and easy to use - simple, not overly complex.<BR/> The Team brings relevant experience and skills.`,RangeStart:1,RangeEnd:5,AnswersArray:[]});
db.Questions.insert({HackathonId:hackathon.insertedId.str,Title:'Viability',Description:`The intended audience would likely use the product.<BR/>The demo could naturally be developed into a working product.<BR/> the team brings relevant Experience and Skills.`,RangeStart:1,RangeEnd:5,AnswersArray:[]});
db.Questions.insert({HackathonId:hackathon.insertedId.str,Title:'Innovation',Description:`The solution is unique; I've never seen anything like it.<BR/>The solution is interesting, creative, and outside the box.`,RangeStart:1,RangeEnd:5,AnswersArray:[]});


// Team - HackathonId,Name, description, people involved, Judgments Array [ Judgeid, questionID, Score or answer from array, Note from judge, *Judge suggested Rank*], Rank Text (“1st” , “2nd”, “Best use of flowers”), Order (kind of rank but so they can drag around ones to the top and bottom
db.Teams.insert({HackathonId:hackathon.insertedId.str,Name:'Team A',Description:'Team Description',PeopleInvolved:'name1,name2',Judgments:[],RankText:'',order:-1});
db.Teams.insert({HackathonId:hackathon.insertedId.str,Name:'Team B',Description:'Team Description',PeopleInvolved:'name1,name2',Judgments:[],RankText:'',order:-1});
db.Teams.insert({HackathonId:hackathon.insertedId.str,Name:'Team C',Description:'Team Description',PeopleInvolved:'name1,name2',Judgments:[],RankText:'',order:-1});


// STOP HERE -- This is just documentation

// Judgements to add to teams: // this is done in code. and doesn't need to be run in mongodb. It's here for documentation 
// let Judgment = {JudgeId:'1234', questions: [{questionId:'1234', Score:5}], Note:'Note from judge'];
// db.collection('Teams').update({insertedId.str:ObjectId('teamidhere')}, {$addToSet:{Judgments:Judgment}});,{w:1,upsert:1,multi:1});    
// Update Rank
// db.collection('Teams').update({insertedId.str:ObjectId('teamidhere')}, {$set:{RankText:'1st',order:1}});,{w:1});   
